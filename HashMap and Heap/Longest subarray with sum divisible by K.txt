// { Driver Code Starts
//Initial Template for Java

//Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;


 // } Driver Code Ends
//User function Template for Java

class Solution{
    int longSubarrWthSumDivByK(int a[], int n, int k)
    {
        // Complete the function
       // We can use array also, as remainder is limited to k only
        HashMap<Integer, Integer> map = new HashMap<>();
        
        int csum = 0;
        int count = 0;
        
        //initial index for csum 0
        map.put(csum, -1);
        
        for (int i = 0; i < n; i++) {
        	//add in csum, csum is c
        	csum += a[i];
        	
        	//find rem for csum which is a
        	int rem = csum % k;
        	
        	if (rem < 0) {
        		rem += k;
        	}
        	
        	if (map.containsKey(rem)) {
        		
        		//if map consist, means len denotes elements of b
        		int idx = map.get(rem);
        		//b is (c - a) elements, Also b will be divisible by k
        		int len = i - idx;
        		
        		//take longest subarray divisible by k, means longest b
        		count = Math.max(count, len);
        	} else {
        		//else put remainder with index of element
        		map.put(rem, i);
        	}
        }
        
        return count;
    }
 
}


// { Driver Code Starts.

// Driver class
class GFG {
    
    // Driver code
	public static void main (String[] args) throws IOException{
		// Taking input using buffered reader
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int testcases = Integer.parseInt(br.readLine());
		
		// looping through all testcases
		while(testcases-- > 0){
		    
		    String line1 = br.readLine();
		    String[] element = line1.trim().split("\\s+");
		    int sizeOfArray = Integer.parseInt(element[0]);
		    int K = Integer.parseInt(element[1]);
		    
		    int arr [] = new int[sizeOfArray];
		    
		    String line = br.readLine();
		    String[] elements = line.trim().split("\\s+");
		    
		    for(int i = 0;i<sizeOfArray;i++){
		        arr[i] = Integer.parseInt(elements[i]);
		    }
		    
		    Solution obj = new Solution();
		   
		    int res = obj.longSubarrWthSumDivByK(arr, sizeOfArray, K);
		    
		    System.out.println(res);
		    
		    
		}
	}
}


  // } Driver Code Ends