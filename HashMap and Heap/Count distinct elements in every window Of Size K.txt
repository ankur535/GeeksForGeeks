// { Driver Code Starts
import java.util.*;
import java.io.*;
import java.util.HashMap;

class GFG
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t > 0)
        {
            int n = sc.nextInt();
            int k = sc.nextInt();
            int a[] = new int[n];
            for (int i = 0; i < n; i++) 
                a[i] = sc.nextInt();
            Solution g = new Solution();
            
            ArrayList<Integer> ans = g.countDistinct(a, n, k);

            for (Integer val: ans) 
                System.out.print(val+" "); 
            System.out.println();
            t--;
        }
    }
}// } Driver Code Ends


class Solution
{
    ArrayList<Integer> countDistinct(int A[], int n, int k)
    {
        // code here 
        HashMap<Integer, Integer> map = new HashMap<>();

		ArrayList<Integer> ans = new ArrayList<>();

		for (int i = 0; i < A.length; i++) {

			if (i < k) {
				//update or insert key with the frequency if i is less than k
				if (map.containsKey(A[i])) {
					int old_freq = map.get(A[i]);
					map.put(A[i], old_freq + 1);
				} else {
					map.put(A[i], 1);
				}
			} else {
				//add size to arraylist
				ans.add(map.size());
				//index to remove from map
				int removeIdx = i - k;
				
				int tr = A[removeIdx];
				//if freq is 1, remove from map
				if (map.get(tr) == 1) {
					map.remove(tr);
				} else {
					//else reduce the frequency
					int old_freq = map.get(tr);
					map.put(tr, old_freq - 1);
				}
				
				if (map.containsKey(A[i])) {
					int old_freq = map.get(A[i]);
					map.put(A[i], old_freq + 1);
				} else {
					map.put(A[i], 1);
				}
			}
		}
		
		//add for last value also
		ans.add(map.size());

		return ans;
    }
}

